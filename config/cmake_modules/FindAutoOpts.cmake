# - Try to find AutoOpts 
# Once done this will define
#
#  AUTOOPTS_FOUND - system has AutoOpts
#  AUTOOPTS_CFLAGS - Compiler switches required for using AutoOpts
#  AUTOOPTS_INCLUDE_DIRS - location of AutoOpts header files
#  AUTOOPTS_LIBRARY_DIRS - location of AutoOpts libraries
#  AUTOOPTS_LIBRARIES - Link these to use AutoOpt
#
#  Copyright (c) 2010 Roman Putanowicz <putanowr@l5.pk.edu.pl>
#
#  Redistribution and use is allowed according to the terms of the New
#  BSD license.
#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
if (AUTOOPTS_LIBRARIES AND AUTOOPTS_INCLUDE_DIRS )
  # in cache already
  set(AUTOOPTS_FOUND TRUE)
else (AUTOOPTS_LIBRARIES AND AUTOOPTS_INCLUDE_DIRS)
  FIND_PACKAGE(PkgConfig QUIET)
  PKG_CHECK_MODULES(AUTOOPTS autoopts)

  FIND_PROGRAM(AUTOOPTS_CONFIG NAMES autoopts-config)

  EXECUTE_PROCESS(COMMAND "${AUTOOPTS_CONFIG}" --autogen
                OUTPUT_VARIABLE AUTOGEN_PROGRAM
                OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  EXECUTE_PROCESS(COMMAND "${AUTOOPTS_CONFIG}" --cflags 
                OUTPUT_VARIABLE AUTOOPTS_CFLAGS
                OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  EXECUTE_PROCESS(COMMAND "${AUTOOPTS_CONFIG}" --includedir 
                OUTPUT_VARIABLE AUTOOPTS_INCLUDE_DIRS
                OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  EXECUTE_PROCESS(COMMAND "${AUTOOPTS_CONFIG}" --libdir 
                OUTPUT_VARIABLE AUTOOPTS_LIBRARY_DIRS
                OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  EXECUTE_PROCESS(COMMAND "${AUTOOPTS_CONFIG}" --pkgdatadir
                OUTPUT_VARIABLE AUTOGEN_DATADIR
                OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  STRING(STRIP ${AUTOGEN_PROGRAM} AUTOGEN_PROGRAM)
  STRING(STRIP ${AUTOOPTS_LIBRARY_DIRS} AUTOOPTS_LIBRARY_DIRS)

  SET(AUTOGEN_PROGRAM ${AUTOGEN_PROGRAM} CACHE STRING AUTOGEN_PROGRAM FORCE)
  SET(AUTOGEN_FLAGS "-L${AUTOGEN_DATADIR}" CACHE STRING AUTOGEN_FLAGS FORCE)
  SET(AUTOOPTS_LIBRARIES ${AUTOOPTS_LIBRARIES} CACHE STRING AUTOOPTS_LIBRARIES FORCE)
  SET(AUTOOPTS_INCLUDE_DIRS ${AUTOOPTS_INCLUDE_DIRS} CACHE STRING AUTOOPTS_INCLUDE_DIRS FORCE)
  SET(AUTOOPTS_LIBRARY_DIRS ${AUTOOPTS_LIBRARY_DIRS} CACHE PATH AUTOOPTS_LIBRARY_DIRS FORCE)
  MESSAGE(STATUS "AUTOGEN_PROGRAM ${AUTOGEN_PROGRAM}")
  MESSAGE(STATUS "AUTOGEN_DATADIR ${AUTOGEN_DATADIR}")
  MESSAGE(STATUS "AUTOOPTS_CFLAGS ${AUTOOPTS_CFLAGS}")
  MESSAGE(STATUS "AUTOOPTS_LIBRARIES ${AUTOOPTS_LIBRARIES}")
  MESSAGE(STATUS "AUTOOPTS_LIBRARY_DIRS ${AUTOOPTS_LIBRARY_DIRS}")
endif (AUTOOPTS_LIBRARIES AND AUTOOPTS_INCLUDE_DIRS)

MACRO(GENERATE_OPTSOURCE optname)  
  SET(OPT_DEF_PATH ${CMAKE_SOURCE_DIR}/options_def )
  SET(FEMDK_OPTS_DIR ${CMAKE_SOURCE_DIR}/options_def )
  SET(OPT_DEF_PREDEF ${ARGN})
  if(ARGN) 
  foreach(lv IN LISTS OPT_DEF_PREDEF )
  LIST(APPEND OPT_DEF_DEP "${OPT_DEF_PATH}/${lv}_options.def")
  endforeach(lv) 
  endif(ARGN)
ADD_CUSTOM_COMMAND (
  OUTPUT ${optname}_options.c ${optname}_options.h
  COMMAND echo HERE "${AUTOGEN_PROGRAM}" ${AUTOGEN_FLAGS} -D LOCAL_OPTS=${OPT_DEF_PATH} -D DEFAULT_OPTS=${OPT_DEF_PATH}
  COMMAND "${AUTOGEN_PROGRAM}" ${AUTOGEN_FLAGS} -D DEFAULT_OPTS=${OPT_DEF_PATH} -D LOCAL_OPTS=${OPT_DEF_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/${optname}_options.def
  DEPENDS ${optname}_options.def ${OPT_DEF_DEP}
  COMMENT "Runing autogen to generate options processing source files"
  VERBATIM
)
ENDMACRO(GENERATE_OPTSOURCE)

MACRO(GENERATE_MANPAGE optname)  
# check if used inside FEMDK itself
  IF(FEMDK_FOUND) 
    SET(OPT_DEF_PATH ${CMAKE_SOURCE_DIR}/options_def )
  ELSE(FEMDK_FOUND)
    SET(OPT_DEF_PATH ${CMAKE_SOURCE_DIR}/src/femdk/options_def )
    SET(FEMDK_OPTS_DIR ${CMAKE_SOURCE_DIR}/src/femdk/options_def )
  ENDIF(FEMDK_FOUND)
  SET(OPT_DEF_PREDEF ${ARGN})
  if(ARGN) 
  foreach(lv IN LISTS OPT_DEF_PREDEF )
  LIST(APPEND OPT_DEF_DEP "${OPT_DEF_PATH}/${lv}_options.def")
  endforeach(lv) 
  endif(ARGN)
ADD_CUSTOM_COMMAND (
  OUTPUT ${optname}.1
  COMMAND "${AUTOGEN_PROGRAM}" ${AUTOGEN_FLAGS} -D
LOCAL_OPTS=${OPT_DEF_PATH} -D DEFAULT_OPTS=${FEMDK_OPTS_DIR} -Tagman1.tpl ${CMAKE_CURRENT_SOURCE_DIR}/${optname}_options.def DEPENDS ${optname}_options.def ${OPT_DEF_DEP}
  COMMENT "Runing autogen to generate man pages"
  VERBATIM
)
ADD_CUSTOM_TARGET(man DEPENDS ${optname}.1)
ADD_CUSTOM_COMMAND (
  OUTPUT ${optname}.texi
  COMMAND "${AUTOGEN_PROGRAM}" ${AUTOGEN_FLAGS} -D
LOCAL_OPTS=${OPT_DEF_PATH} -D DEFAULT_OPTS=${FEMDK_OPTS_DIR}  -Taginfo.tpl -DLEVEL=section ${CMAKE_CURRENT_SOURCE_DIR}/${optname}_options.def DEPENDS ${optname}_options.def ${OPT_DEF_DEP}
  COMMENT "Runing autogen to generate techinfo documentation"
  VERBATIM
)
ADD_CUSTOM_TARGET(texi DEPENDS ${optname}.texi)
ENDMACRO(GENERATE_MANPAGE)
